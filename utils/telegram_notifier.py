import requests
from functools import wraps
from flask import request
from datetime import datetime


def send_telegram_notification(bot_token, message):
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
    """
    try:
        api_url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        data = {
            "chat_id": "@schedule_notifications",  # –ò–º—è –∫–∞–Ω–∞–ª–∞/–≥—Ä—É–ø–ø—ã
            "text": message,
            "parse_mode": "HTML"
        }
        response = requests.post(api_url, data=data)
        response.raise_for_status()
        return True
    except Exception as e:
        print(f"Error sending Telegram notification: {e}")
        return False


def notify_view(bot_token):
    """
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    """

    def decorator(f):
        @wraps(f)
        def wrapper(*args, **kwargs):
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            message = (
                f"üëÄ <b>–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</b>\n\n"
                f"üïí –í—Ä–µ–º—è: {timestamp}"
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            send_telegram_notification(bot_token, message)

            return f(*args, **kwargs)

        return wrapper

    return decorator